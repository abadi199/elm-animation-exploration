{"version":3,"sources":["../Js/elmAnimation.ts"],"names":[],"mappings":"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","file":"elmAnimation.fc0da23a.js","sourceRoot":"../src/Slide","sourcesContent":["class ElmAnimation extends HTMLElement {\n  constructor(private currentAnimation: Animation | null) {\n    super();\n  }\n\n  static get observedAttributes() {\n    return [\"animate\", \"playback\"];\n  }\n\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    switch (name) {\n      case \"animate\":\n        this.animateContent(newValue);\n        break;\n      case \"playback\":\n        this.playback(newValue);\n        break;\n    }\n  }\n\n  playback(value: string): void {\n    if (!this.currentAnimation) {\n      return;\n    }\n\n    switch (value) {\n      case \"play\":\n        this.currentAnimation.play();\n        break;\n      case \"pause\":\n        this.currentAnimation.pause();\n        break;\n    }\n  }\n\n  animateContent(json: string): Animation | null {\n    const animationData: any = JSON.parse(json);\n\n    if (!this.children || this.children.length === 0) {\n      return null;\n    }\n\n    if (this.currentAnimation) {\n      this.currentAnimation.cancel();\n    }\n\n    if (animationData.keyframes.length === 0) {\n      return null;\n    }\n\n    this.currentAnimation = this.children[0].animate(\n      animationData.keyframes,\n      animationData.options\n    );\n\n    this.currentAnimation.onfinish = () => {\n      this.dispatchEvent(new Event(\"finish\"));\n    };\n\n    return this.currentAnimation;\n  }\n\n  connectedCallback() {\n    const animateJson = this.getAttribute(\"animate\");\n\n    if (animateJson) {\n      this.animateContent(animateJson);\n    }\n\n    const playbackValue = this.getAttribute(\"playback\");\n    if (playbackValue) {\n      this.playback(playbackValue);\n    }\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\n  customElements.define(\"elm-animation\", ElmAnimation);\n});\n"]}